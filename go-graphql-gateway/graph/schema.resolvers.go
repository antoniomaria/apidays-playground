package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"
	"graphql-gateway/graph/model"
)

// UpdateSeatStatus is the resolver for the updateSeatStatus field.
func (r *mutationResolver) UpdateSeatStatus(ctx context.Context, rowNumber int32, seatLetter *string, occupied bool) (*bool, error) {
	panic(fmt.Errorf("not implemented: UpdateSeatStatus - updateSeatStatus"))
}

// Ping is the resolver for the ping field.
func (r *queryResolver) Ping(ctx context.Context) (*string, error) {
	panic(fmt.Errorf("not implemented: Ping - ping"))
}

// SeatStatus is the resolver for the seatStatus field.
func (r *queryResolver) SeatStatus(ctx context.Context, rowNumber int32, seatLetter string) (*model.SeatStatus, error) {
	panic(fmt.Errorf("not implemented: SeatStatus - seatStatus"))
}

// SeatStatusUpdated is the resolver for the seatStatusUpdated field.
func (r *subscriptionResolver) SeatStatusUpdated(ctx context.Context) (<-chan *model.SeatStatus, error) {
	panic(fmt.Errorf("not implemented: SeatStatusUpdated - seatStatusUpdated"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Subscription returns SubscriptionResolver implementation.
func (r *Resolver) Subscription() SubscriptionResolver { return &subscriptionResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type subscriptionResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}
*/
